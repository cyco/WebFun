import { Opcode } from "/engine/objects/condition";

import ZoneNotInitalized from "./zone-not-initalized";
import ZoneEntered from "./zone-entered";
import Bump from "./bump";
import PlaceItem from "./place-item";
import StandingOn from "./standing-on";
import CounterIs from "./counter-is";
import RandomIs from "./random-is";
import RandomIsGreaterThan from "./random-is-greater-than";
import RandomIsLessThan from "./random-is-less-than";
import EnterByPlane from "./enter-by-plane";
import TileAtIs from "./tile-at-is";
import NPCIsActive from "./npc-is-active";
import HasNoActiveNPCs from "./has-no-active-npcs";
import HasItem from "./has-item";
import RequiredItemIs from "./required-item-is";
import EndingIs from "./ending-is";
import ZoneIsSolved from "./zone-is-solved";
import Unknown1 from "./unknown1";
import Unknown1Again from "./unknown1-again";
import HealthIsLessThan from "./health-is-less-than";
import HealthIsGreaterThan from "./health-is-greater-than";
import Unknown2 from "./unknown2";
import FindItemIs from "./find-item-is";
import PlaceItemIsNot from "./place-item-is-not";
import HeroIsAt from "./hero-is-at";
import PaddingIs from "./padding-is";
import PaddingIsLessThan from "./padding-is-less-than";
import PaddingIsGreaterThan from "./padding-is-greater-than";
import GamesWonIs from "./games-won-is";
import HasHotspotTriggerAt from "./has-hotspot-trigger-at";
import Unknown5 from "./unknown5";
import CounterIsNot from "./counter-is-not";
import RandomIsNot from "./random-is-not";
import PaddingIsNot from "./padding-is-not";
import TileAtIsAgain from "./tile-at-is-again";
import GamesWonIsGreaterThan from "./games-won-is-greater-than";

const Conditions = {};

Conditions[Opcode.ZoneNotInitalized] = ZoneNotInitalized;
Conditions[Opcode.ZoneEntered] = ZoneEntered;
Conditions[Opcode.Bump] = Bump;
Conditions[Opcode.PlaceItem] = PlaceItem;
Conditions[Opcode.StandingOn] = StandingOn;
Conditions[Opcode.CounterIs] = CounterIs;
Conditions[Opcode.RandomIs] = RandomIs;
Conditions[Opcode.RandomIsGreaterThan] = RandomIsGreaterThan;
Conditions[Opcode.RandomIsLessThan] = RandomIsLessThan;
Conditions[Opcode.EnterByPlane] = EnterByPlane;
Conditions[Opcode.TileAtIs] = TileAtIs;
Conditions[Opcode.NPCIsActive] = NPCIsActive;
Conditions[Opcode.HasNoActiveNPCs] = HasNoActiveNPCs;
Conditions[Opcode.HasItem] = HasItem;
Conditions[Opcode.RequiredItemIs] = RequiredItemIs;
Conditions[Opcode.EndingIs] = EndingIs;
Conditions[Opcode.ZoneIsSolved] = ZoneIsSolved;
Conditions[Opcode.Unknown1] = Unknown1;
Conditions[Opcode.Unknown1Again] = Unknown1Again;
Conditions[Opcode.HealthIsLessThan] = HealthIsLessThan;
Conditions[Opcode.HealthIsGreaterThan] = HealthIsGreaterThan;
Conditions[Opcode.Unknown2] = Unknown2;
Conditions[Opcode.FindItemIs] = FindItemIs;
Conditions[Opcode.PlaceItemIsNot] = PlaceItemIsNot;
Conditions[Opcode.HeroIsAt] = HeroIsAt;
Conditions[Opcode.PaddingIs] = PaddingIs;
Conditions[Opcode.PaddingIsLessThan] = PaddingIsLessThan;
Conditions[Opcode.PaddingIsGreaterThan] = PaddingIsGreaterThan;
Conditions[Opcode.GamesWonIs] = GamesWonIs;
Conditions[Opcode.HasHotspotTriggerAt] = HasHotspotTriggerAt;
Conditions[Opcode.Unknown5] = Unknown5;
Conditions[Opcode.CounterIsNot] = CounterIsNot;
Conditions[Opcode.RandomIsNot] = RandomIsNot;
Conditions[Opcode.PaddingIsNot] = PaddingIsNot;
Conditions[Opcode.TileAtIsAgain] = TileAtIsAgain;
Conditions[Opcode.GamesWonIsGreaterThan] = GamesWonIsGreaterThan;

export default Conditions;
